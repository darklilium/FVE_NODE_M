(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['exports', 'react', 'classnames', './TableColumn', '../SelectFields/SelectField'], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require('react'), require('classnames'), require('./TableColumn'), require('../SelectFields/SelectField'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.react, global.classnames, global.TableColumn, global.SelectField);
    global.SelectFieldColumn = mod.exports;
  }
})(this, function (exports, _react, _classnames, _TableColumn, _SelectField) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _interopRequireDefault(_react);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _TableColumn2 = _interopRequireDefault(_TableColumn);

  var _SelectField2 = _interopRequireDefault(_SelectField);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  function _objectWithoutProperties(obj, keys) {
    var target = {};

    for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;
      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
      target[i] = obj[i];
    }

    return target;
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  // This is really half the time of the default menu transition. It seemed to be reasonable
  // enough
  var ABSOLUTE_DELAY = 100;

  var styles = {
    absolute: { position: 'absolute' }
  };

  /**
   * The `SelectFieldColumns` is a simple wrapper for the `SelectField` and `TableColumn`
   * components. The only purpose of this Component is to allow the select field's menu
   * to extend past the data table's bounds.
   *
   * All props are just passed to the `SelectField` inside. To view all other undocumented
   * props here, view [Select Field Documentation](/components/select-fields#prop-types-select-field)
   */

  var SelectFieldColumn = function (_PureComponent) {
    _inherits(SelectFieldColumn, _PureComponent);

    function SelectFieldColumn(props) {
      _classCallCheck(this, SelectFieldColumn);

      var _this = _possibleConstructorReturn(this, (SelectFieldColumn.__proto__ || Object.getPrototypeOf(SelectFieldColumn)).call(this, props));

      _this.state = { absolute: props.defaultOpen };
      _this._handleMenuToggle = _this._handleMenuToggle.bind(_this);
      return _this;
    }

    _createClass(SelectFieldColumn, [{
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        if (this._timeout) {
          clearTimeout(this._timeout);
        }
      }
    }, {
      key: '_handleMenuToggle',
      value: function _handleMenuToggle(open, event) {
        var _this2 = this;

        if (this.props.onMenuToggle) {
          this.props.onMenuToggle(open, event);
        }

        this._timeout = setTimeout(function () {
          _this2._timeout = null;
          _this2.setState({ absolute: open });
        }, ABSOLUTE_DELAY);
      }
    }, {
      key: 'render',
      value: function render() {
        var absolute = this.state.absolute;

        var _props = this.props,
            style = _props.style,
            className = _props.className,
            menuStyle = _props.menuStyle,
            menuClassName = _props.menuClassName,
            props = _objectWithoutProperties(_props, ['style', 'className', 'menuStyle', 'menuClassName']);

        delete props.header;

        return _react2.default.createElement(
          _TableColumn2.default,
          {
            style: _extends({}, style, styles['' + (absolute ? 'absolute' : 'noop')]),
            className: (0, _classnames2.default)('prevent-grow', className)
          },
          _react2.default.createElement(_SelectField2.default, _extends({}, props, {
            style: menuStyle,
            className: menuClassName,
            onMenuToggle: this._handleMenuToggle,
            position: _SelectField2.default.Positions.BELOW
          }))
        );
      }
    }]);

    return SelectFieldColumn;
  }(_react.PureComponent);

  SelectFieldColumn.propTypes = {
    /**
     * Boolean if the select field is open by default.
     */
    defaultOpen: _react.PropTypes.bool.isRequired,

    /**
     * An optional function to call when the select field's menu open state
     * is toggled.
     */
    onMenuToggle: _react.PropTypes.func,

    /**
     * An optional style to apply to the column.
     */
    style: _react.PropTypes.object,

    /**
     * An optional className to apply to the column.
     */
    className: _react.PropTypes.string,

    /**
     * An optional style to apply to the select field's menu in the table column.
     */
    menuStyle: _react.PropTypes.object,

    /**
     * An optional class name to apply to the select field's menu in the table column.
     */
    menuClassName: _react.PropTypes.string
  };
  SelectFieldColumn.defaultProps = {
    defaultOpen: false
  };
  exports.default = SelectFieldColumn;
});